// numerical integration header/template


#ifndef __INC_INTEGRATION_H

#define __INC_INTEGRATION_H


#include "geometry.h"



/* Single-variable integrals in bounded interval */
/* Sampling + Interpolation based numerical integrators */

// standard Simpson's method, requires N to be even
// Estimated error: (b-a)⁴/180 |f"'(b)-f"'(a)| N⁻⁴
// 3rd derivative of the function needs be continuous to get the expected accuracy
template<typename T, typename Fun>
T NIntegrate_Simpson(Fun f, double a, double b, int N) {
	double dx = (b - a) / N;
	T s(0.);
	for (int i = 1; i < N; i += 2) s += f(a + i * dx);
	s *= 2;
	for (int i = 2; i < N; i += 2) s += f(a + i * dx);
	s = s * 2. + f(a) + f(b);
	return s * (dx / 3.);
}

// Gaussian quadrature with 2 samples per subinterval
// Estimated error: (b-a)⁴/270 |f"'(b)-f"'(a)| N⁻⁴
template<typename T, typename Fun>
T NIntegrate_quad2(Fun f, double a, double b, int N) {
	double dx = (b - a) / (N >>= 1);
	T s(0.);
	const double d0 = 0.21132486540518711775, d1 = 0.78867513459481288225;  // (1±1/sqrt(3))/2
	for (int i = 0; i < N; i++) {
		s += f(a + (i + d0)*dx) + f(a + (i + d1)*dx);
	}
	return s * (dx / 2.);
}

// standard trapezoid method
// Estimated error: (b-a)²/12 |f'(b)-f'(a)| N⁻²
template<typename T, typename Fun>
T NIntegrate_trapezoid(Fun f, double a, double b, int N) {
	double dx = (b - a) / N;
	T s(0.);
	for (int i = 1; i < N; i++) s += f(a + i * dx);
	s += (f(a) + f(b))*.5;
	return s * dx;
}

// rectangle method, sample at midpoints
// Estimated error: (b-a)²/24 |f'(b)-f'(a)| N⁻²
// more accurate and portable than the trapezoid method
template<typename T, typename Fun>
T NIntegrate_midpoint(Fun f, double a, double b, int N) {
	double dx = (b - a) / N;
	a += .5*dx;  // midpoint
	T s(0.);
	for (int i = 0; i < N; i++) s += f(a + i * dx);
	return s * dx;
}

#if 1
// experimental method
template<typename T, typename Fun>
T NIntegrate_rect_rand(Fun f, double a, double b, int N) {
	double dx = (b - a) / N;
	T s(0.);
	unsigned seed = 1;
	for (int i = 0; i < N; i++) {
		double random = (seed = seed * 1664525u + 1013904223u) * (1. / 4294967296.);  // between 0 and 1
		s += f(a + (i + random) * dx);
	}
	return s * dx;
}
#endif




/* Line integrals respect to the arc length of parametric curves */
/* Some integrators have samples outside the interval (numerical differentiation) */
/* Those integrators (themselves) are relatively slow;
** If the function to be integrated is relatively cheap, use numerical differentiation + definite integral */

// Integral[f(t)dS, a, b], dS=length(dp/dt)dt;  O(N⁻²)
template<typename T, typename vec, typename Fun/*T(double)*/, typename fun/*vec(double)*/>
T NIntegrate_AL_midpoint_t(Fun f, fun p, double a, double b, int N) {
	double dt = (b - a) / N;
	T r(0.);
	vec p0 = p(a);
	for (int i = 1; i <= N; i++) {
		vec p1 = p(a + i * dt);
		T val = f(a + (i - .5)*dt);
		double dl = length(p1 - p0);
		r += val * dl;
		p0 = p1;
	}
	return r;
}
// Integral[f(p(t))dS, a, b];  same as the previous one
template<typename T, typename vec, typename Fun/*T(vec)*/, typename fun/*vec(double)*/>
T NIntegrate_AL_midpoint_p(Fun f, fun p, double a, double b, int N) {
	double dt = (b - a) / N;
	T r(0.);
	vec p0 = p(a);
	for (int i = 1; i <= N; i++) {
		vec p1 = p(a + i * dt);
		T val = f((p0 + p1)*0.5);
		double dl = length(p1 - p0);
		r += val * dl;
		p0 = p1;
	}
	return r;
}
// Integral[f(t)dS, a, b];  derived from Simpson, O(N⁻⁴)
template<typename T, typename vec, typename Fun/*T(double)*/, typename fun/*vec(double)*/>
T NIntegrate_AL_Simpson_t(Fun f, fun p, double a, double b, int N) {
#if 1
	// O(N^4), with samples outside the interval
	double dt = (b - a) / (N >>= 1);
	T r(0.);
	vec p00 = p(a - dt), pc0 = p(a - .5*dt), p0 = p(a), pc = p(a + .5*dt), p1 = p(a + dt), pc1, p11;  // position samples with delta 0.5*dt
	T v0 = f(a) * length(-p1 + pc * 8. - pc0 * 8. + p00), vc, v1;  // function value samples with delta 0.5*dt
	for (int i = 1; i <= N; i++) {
		double t = a + i * dt;
		pc1 = p(t + .5*dt), p11 = p(t + dt);
		vc = f(t - .5*dt) * length(-pc1 + p1 * 8. - p0 * 8. + pc0);  // finite difference with O(h⁴) error
		v1 = f(t) * length(-p11 + pc1 * 8. - pc * 8. + p0);
		r += v0 + vc * 4. + v1;
		p00 = p0, pc0 = pc, p0 = p1, pc = pc1, p1 = p11; v0 = v1;
	}
	return r * (1. / 36.);
#elif 1
	// test O(N^2)
	double dt = (b - a) / (N >>= 1);
	T s(0.);
	for (int i = 0; i < N; i++) {
		const double d0 = 0.21132486540518711775, d1 = 0.78867513459481288225;
		double t0 = a + (i + d0)*dt, t1 = a + (i + d1)*dt;
		vec p0 = p(t0), p1 = p(t1);
		T v0 = f(t0), v1 = f(t1);
		s += (v0 + v1)*(0.5*length(p1 - p0) / (d1 - d0));
	}
	return s;
#else
	// test O(N^2)
	double dt = (b - a) / (N >>= 1);
	T s(0.);
	for (int i = 0; i < N; i++) {
		const double d0 = 0.112701665379258311482073, dc = 0.5, d1 = 0.887298334620741688517927;
		const double w0 = 5. / 18., wc = 4. / 9., w1 = 5. / 18.;
		double t0 = a + (i + d0)*dt, tc = a + (i + dc)*dt, t1 = a + (i + d1)*dt;
		vec p0 = p(t0), pc = p(tc), p1 = p(t1);
		T v0 = f(t0), vc = f(tc), v1 = f(t1);

		double det = (t0 - tc)*(t0 - t1)*(tc - t1);
		vec _m = 2 * (p0 * (tc - t1) + pc * (t1 - t0) + p1 * (t0 - tc)) / det;
		vec _b = -(p0 * (tc*tc - t1 * t1) + pc * (t1*t1 - t0 * t0) + p1 * (t0*t0 - tc * tc)) / det;
		vec dp0 = _m * t0 + _b, dpc = _m * tc + _b, dp1 = _m * t1 + _b;
		//vec dp01 = p0 * (2 * d0 - (tc + t1)) / ((t0 - tc)*(t0 - t1)) + pc * (2 * d0 - (tc + t1)) / ((tc - t0)*(tc - t1)) + p1 * (2 * d0 - (t0 + tc)) / ((t1 - t0)*(t1 - tc));
		//if (length(dp01 - dp0) > 1e-3) throw(1);

		//vec dp0 = (pc - p0) / (dc - d0), dpc = (p1 - p0) / (d1 - d0), dp1 = (p1 - pc) / (d1 - dc);

		s += v0 * length(dp0)*w0 + vc * length(dpc)*wc + v1 * length(dp1)*w1;
	}
	return s * dt;
#endif
}
// Integral[f(p(t))dS, a, b];
template<typename T, typename vec, typename Fun/*T(vec)*/, typename fun/*vec(double)*/>
T NIntegrate_AL_Simpson_p(Fun f, fun p, double a, double b, int N) {
	// same as the previous one except it uses f(p) instead of f(t)
	double dt = (b - a) / (N >>= 1);
	T r(0.);
	vec p00 = p(a - dt), pc0 = p(a - .5*dt), p0 = p(a), pc = p(a + .5*dt), p1 = p(a + dt), pc1, p11;
	T v0 = f(p0) * length(-p1 + pc * 8. - pc0 * 8. + p00), vc, v1;
	for (int i = 1; i <= N; i++) {
		double t = a + i * dt;
		pc1 = p(t + .5*dt), p11 = p(t + dt);
		vc = f(pc) * length(-pc1 + p1 * 8. - p0 * 8. + pc0);
		v1 = f(p1) * length(-p11 + pc1 * 8. - pc * 8. + p0);
		r += v0 + vc * 4. + v1;
		p00 = p0, pc0 = pc, p0 = p1, pc = pc1, p1 = p11; v0 = v1;
	}
	return r * (1. / 36.);
}





// Gaussian-Legendre quadrature with hard-coded coefficients
// Coefficient calculator: https://keisan.casio.com/exec/system/1329114617
// Accurate for high-order differentiable functions

// hard-coded samples and weights, in [0,1]
const double NIntegrate_GL4_S[4] = { .06943184420297371238,.33000947820757186759,.66999052179242813240,.93056815579702628761 }, NIntegrate_GL4_W[4] = { .17392742256872692868,.32607257743127307131,.32607257743127307131,.17392742256872692868 };
const double NIntegrate_GL6_S[6] = { .03376524289842398609,.16939530676686774316,.38069040695840154568,.61930959304159845431,.83060469323313225683,.96623475710157601390 }, NIntegrate_GL6_W[6] = { .08566224618958517252,.18038078652406930378,.23395696728634552369,.23395696728634552369,.18038078652406930378,.08566224618958517252 };
const double NIntegrate_GL8_S[8] = { .01985507175123188415,.10166676129318663020,.23723379504183550709,.40828267875217509753,.59171732124782490246,.76276620495816449290,.89833323870681336979,.98014492824876811584 }, NIntegrate_GL8_W[8] = { .05061426814518812957,.11119051722668723527,.15685332293894364366,.18134189168918099148,.18134189168918099148,.15685332293894364366,.11119051722668723527,.05061426814518812957 };
const double NIntegrate_GL10_S[10] = { .01304673574141413996,.06746831665550774463,.16029521585048779688,.28330230293537640460,.42556283050918439455,.57443716949081560544,.71669769706462359539,.83970478414951220311,.93253168334449225536,.98695326425858586003 }, NIntegrate_GL10_W[10] = { .03333567215434406879,.07472567457529029657,.10954318125799102199,.13463335965499817754,.14776211235737643508,.14776211235737643508,.13463335965499817754,.10954318125799102199,.07472567457529029657,.03333567215434406879 };
const double NIntegrate_GL12_S[12] = { .00921968287664037465,.04794137181476257166,.11504866290284765648,.20634102285669127635,.31608425050090990312,.43738329574426554226,.56261670425573445773,.68391574949909009687,.79365897714330872364,.88495133709715234351,.95205862818523742833,.99078031712335962534 }, NIntegrate_GL12_W[12] = { .02358766819325591359,.05346966299765921548,.08003916427167311316,.10158371336153296087,.11674626826917740438,.12457352290670139250,.12457352290670139250,.11674626826917740438,.10158371336153296087,.08003916427167311316,.05346966299765921548,.02358766819325591359 };
const double NIntegrate_GL14_S[14] = { .00685809565159383057,.03578255816821324133,.08639934246511750340,.15635354759415726492,.24237568182092295401,.34044381553605511978,.44597252564632816896,.55402747435367183103,.65955618446394488021,.75762431817907704598,.84364645240584273507,.91360065753488249659,.96421744183178675866,.99314190434840616942 }, NIntegrate_GL14_W[14] = { .01755973016587593151,.04007904357988010490,.06075928534395159234,.07860158357909676728,.09276919873896890687,.10259923186064780198,.10763192673157889509,.10763192673157889509,.10259923186064780198,.09276919873896890687,.07860158357909676728,.06075928534395159234,.04007904357988010490,.01755973016587593151 };
const double NIntegrate_GL16_S[16] = { .00529953250417503370,.02771248846338371196,.06718439880608412805,.12229779582249848305,.19106187779867812577,.27099161117138630682,.35919822461037054338,.45249374508118127990,.54750625491881872009,.64080177538962945661,.72900838882861369317,.80893812220132187422,.87770220417750151694,.93281560119391587194,.97228751153661628803,.99470046749582496629 }, NIntegrate_GL16_W[16] = { .01357622970587704742,.03112676196932394643,.04757925584124639240,.06231448562776693602,.07479799440828836604,.08457825969750126909,.09130170752246179443,.09472530522753424814,.09472530522753424814,.09130170752246179443,.08457825969750126909,.07479799440828836604,.06231448562776693602,.04757925584124639240,.03112676196932394643,.01357622970587704742 };
const double NIntegrate_GL18_S[18] = { .00421741578953452663,.02208802521430112240,.05369876675122213039,.09814752051373844215,.15415647846982339606,.22011458446302623269,.29412441926857867698,.37405688715424724520,.45761249347913234937,.54238750652086765062,.62594311284575275479,.70587558073142132301,.77988541553697376730,.84584352153017660393,.90185247948626155784,.94630123324877786960,.97791197478569887759,.99578258421046547336 }, NIntegrate_GL18_W[18] = { .01080800676324165515,.02485727444748489822,.03821286512744452826,.05047102205314358278,.06127760335573923009,.07032145733532532560,.07734233756313262246,.08213824187291636149,.08457119148157179592,.08457119148157179592,.08213824187291636149,.07734233756313262246,.07032145733532532560,.06127760335573923009,.05047102205314358278,.03821286512744452826,.02485727444748489822,.01080800676324165515 };
const double NIntegrate_GL20_S[20] = { .00343570040745253760,.01801403636104310436,.04388278587433704706,.08044151408889058830,.12683404676992460369,.18197315963674248727,.24456649902458645099,.31314695564229021966,.38610707442917746095,.46173673943325133312,.53826326056674866687,.61389292557082253904,.68685304435770978033,.75543350097541354900,.81802684036325751272,.87316595323007539630,.91955848591110941169,.95611721412566295293,.98198596363895689563,.99656429959254746239 }, NIntegrate_GL20_W[20] = { .00880700356957605915,.02030071490019347066,.03133602416705453178,.04163837078835237436,.05096505990862021751,.05909726598075920865,.06584431922458831344,.07104805465919102566,.07458649323630187339,.07637669356536292534,.07637669356536292534,.07458649323630187339,.07104805465919102566,.06584431922458831344,.05909726598075920865,.05096505990862021751,.04163837078835237436,.03133602416705453178,.02030071490019347066,.00880700356957605915 };
const double NIntegrate_GL24_S[24] = { .00240639000148931991,.01263572201434525090,.03086272399863362073,.05679223649779948289,.08999900701304853902,.12993790421072281787,.17595317403151221537,.22728926430558023217,.28310324618697743075,.34247866015191831280,.40444056626319184542,.46797155356869718695,.53202844643130281304,.59555943373680815457,.65752133984808168719,.71689675381302256924,.77271073569441976782,.82404682596848778462,.87006209578927718212,.91000099298695146097,.94320776350220051710,.96913727600136637926,.98736427798565474909,.99759360999851068008 }, NIntegrate_GL24_W[24] = { .00617061489999359977,.01426569431446683159,.02213871940870990308,.02964929245771839037,.03667324070554015286,.04309508076597663795,.04880932605205694413,.05372213505798281739,.05775283402686280067,.06083523646390169560,.06291872817341414806,.06396909767337607848,.06396909767337607848,.06291872817341414806,.06083523646390169560,.05775283402686280067,.05372213505798281739,.04880932605205694413,.04309508076597663795,.03667324070554015286,.02964929245771839037,.02213871940870990308,.01426569431446683159,.00617061489999359977 };
const double NIntegrate_GL28_S[28] = { .00177875121302277502,.00934841731456362315,.02287035968553090137,.04218348680393396306,.06705373871280247552,.09717931454141041427,.13219456099318411398,.17167445298056751939,.21513976409429914034,.26206288752244086948,.31187424195546064488,.36396918618241096116,.41771535893330961435,.47246035505798286478,.52753964494201713521,.58228464106669038564,.63603081381758903883,.68812575804453935511,.73793711247755913051,.78486023590570085965,.82832554701943248060,.86780543900681588601,.90282068545858958572,.93294626128719752447,.95781651319606603693,.97712964031446909862,.99065158268543637684,.99822124878697722497 }, NIntegrate_GL28_W[28] = { .00456214129654725886,.01056605629638562987,.01645071389115218998,.02213646737950211391,.02755367283785837271,.03263646198349979789,.03732310711728438951,.04155670861445060919,.04528587219651642047,.04846532899896495792,.05105648378903038490,.05302788296142320895,.05435559612914706762,.05502350650823759814,.05502350650823759814,.05435559612914706762,.05302788296142320895,.05105648378903038490,.04846532899896495792,.04528587219651642047,.04155670861445060919,.03732310711728438951,.03263646198349979789,.02755367283785837271,.02213646737950211391,.01645071389115218998,.01056605629638562987,.00456214129654725886 };
const double NIntegrate_GL32_S[32] = { .00136806907525921822,.00719424422736583229,.01761887220624678461,.03254696203113015541,.05183942211697393801,.07531619313371501493,.10275810201602879651,.13390894062985515980,.16847786653489239951,.20614212137961883547,.24655004553388530498,.28932436193468232731,.33406569885893617511,.38035631887393146272,.42776401920860175325,.47584616715613084188,.52415383284386915811,.57223598079139824674,.61964368112606853727,.66593430114106382488,.71067563806531767268,.75344995446611469501,.79385787862038116452,.83152213346510760048,.86609105937014484019,.89724189798397120348,.92468380686628498506,.94816057788302606198,.96745303796886984458,.98238112779375321538,.99280575577263416770,.99863193092474078177 }, NIntegrate_GL32_W[32] = { .00350930500473504830,.00813719736545283530,.01269603265463102972,.01713693145651071655,.02141794901111334032,.02549902963118808809,.02934204673926777357,.03291111138818092341,.03617289705442425311,.03909694789353515323,.04165596211347337761,.04382604650220190557,.04558693934788194235,.04692219954040228281,.04781936003963742970,.04827004425736390028,.04827004425736390028,.04781936003963742970,.04692219954040228281,.04558693934788194235,.04382604650220190557,.04165596211347337761,.03909694789353515323,.03617289705442425311,.03291111138818092341,.02934204673926777357,.02549902963118808809,.02141794901111334032,.01713693145651071655,.01269603265463102972,.00813719736545283530,.00350930500473504830 };
const double NIntegrate_GL36_S[36] = { .00108476875795708190,.00570676054889388096,.01398615447515102533,.02586350780024622739,.04125111274217046696,.06003509955480143400,.08207641650376234679,.10721188493389674358,.13525541420322170895,.16599938170723946895,.19921617093200973246,.23465985703687741917,.27206802778328986639,.31116372644015539183,.35165750232798586474,.39324955384156721052,.43563194809530760567,.47849090076314569638,.52150909923685430361,.56436805190469239432,.60675044615843278947,.64834249767201413525,.68883627355984460816,.72793197221671013360,.76534014296312258082,.80078382906799026753,.83400061829276053104,.86474458579677829104,.89278811506610325641,.91792358349623765320,.93996490044519856599,.95874888725782953303,.97413649219975377260,.98601384552484897466,.99429323945110611903,.99891523124204291809 }, NIntegrate_GL36_W[36] = { .00278285983212252268,.00645797364203278720,.01009075764886773576,.01364931074928438954,.01710690538515361496,.02043787546182244773,.02361754174513298920,.02662235698887995954,.02943007212266240865,.03201989867750774477,.03437266191786822130,.03647094250282653067,.03829920532293533726,.03984391445603580095,.04109363335216985475,.04203910948983096746,.04267334286966931374,.04299163783519737374,.04299163783519737374,.04267334286966931374,.04203910948983096746,.04109363335216985475,.03984391445603580095,.03829920532293533726,.03647094250282653067,.03437266191786822130,.03201989867750774477,.02943007212266240865,.02662235698887995954,.02361754174513298920,.02043787546182244773,.01710690538515361496,.01364931074928438954,.01009075764886773576,.00645797364203278720,.00278285983212252268 };
const double NIntegrate_GL40_S[40] = { .00088114514472039982,.00463688065027149677,.01137002500811286866,.02104159039310417209,.03359359586066173331,.04895059651556285163,.06702024839387024808,.08769388458334416840,.11084717428674030615,.13634087240503644835,.16402165769291022581,.19372305516600988102,.22526643745243589896,.25846209915691064354,.29311039781419749923,.32900295458712076349,.36592390749637315942,.40365120964931445014,.44195796466237239575,.48061379124697458903,.51938620875302541096,.55804203533762760424,.59634879035068554985,.63407609250362684057,.67099704541287923650,.70688960218580250076,.74153790084308935645,.77473356254756410103,.80627694483399011897,.83597834230708977418,.86365912759496355164,.88915282571325969384,.91230611541665583159,.93297975160612975191,.95104940348443714836,.96640640413933826668,.97895840960689582790,.98862997499188713133,.99536311934972850322,.99911885485527960017 }, NIntegrate_GL40_W[40] = { .00226063854926659562,.00524914226557640680,.00821052919095394435,.01112292459708347863,.01396850349001170054,.01673009764127392369,.01939108398723600881,.02193545409283663599,.02434790381753611603,.02661392349196841217,.02871988454969577568,.03065312124646446958,.03240200672830051903,.03395602290761695191,.03530582369564338984,.03644329119790202953,.03736158452898413210,.03805518095031312118,.03851990908212398279,.03875297398921240563,.03875297398921240563,.03851990908212398279,.03805518095031312118,.03736158452898413210,.03644329119790202953,.03530582369564338984,.03395602290761695191,.03240200672830051903,.03065312124646446958,.02871988454969577568,.02661392349196841217,.02434790381753611603,.02193545409283663599,.01939108398723600881,.01673009764127392369,.01396850349001170054,.01112292459708347863,.00821052919095394435,.00524914226557640680,.00226063854926659562 };
const double NIntegrate_GL48_S[48] = { .00061449637378694069,.00323491386682462122,.00793770813858657112,.01470420372687637476,.02350614841978456963,.03430665464672283344,.04706043164221516358,.06171398986287605704,.07820586918780323464,.09646689798527868645,.11642048374212983037,.13798293453809267266,.16106381018366804739,.18556630161174318800,.21138763695801364809,.23841951263888348316,.26654854762452079772,.29565675900464163504,.32562205685391963092,.35631875632227221163,.38761810480265546938,.41938882196555414097,.45149765039526865053,.48380991451856531898,.51619008548143468101,.54850234960473134946,.58061117803444585902,.61238189519734453061,.64368124367772778836,.67437794314608036907,.70434324099535836495,.73345145237547920227,.76158048736111651683,.78861236304198635190,.81443369838825681199,.83893618981633195260,.86201706546190732733,.88357951625787016962,.90353310201472131354,.92179413081219676535,.93828601013712394295,.95293956835778483641,.96569334535327716655,.97649385158021543036,.98529579627312362523,.99206229186141342887,.99676508613317537877,.99938550362621305930 }, NIntegrate_GL48_W[48] = { .00157667302615291931,.00366377695063813105,.00573861728961726974,.00778965786147192436,.00980808022867776390,.01178538041966218957,.01371325485417847410,.01558361391639904445,.01738861128238521944,.01912067553291535315,.02077254147173237460,.02233728042834714020,.02380832924624523741,.02517951777692723747,.02644509474259683354,.02759975184999208143,.02863864605020160785,.02955741984919781787,.03035221958294694002,.03101971157994633195,.03155709614312701282,.03196211929232409331,.03223308221797504110,.03236884840634196125,.03236884840634196125,.03223308221797504110,.03196211929232409331,.03155709614312701282,.03101971157994633195,.03035221958294694002,.02955741984919781787,.02863864605020160785,.02759975184999208143,.02644509474259683354,.02517951777692723747,.02380832924624523741,.02233728042834714020,.02077254147173237460,.01912067553291535315,.01738861128238521944,.01558361391639904445,.01371325485417847410,.01178538041966218957,.00980808022867776390,.00778965786147192436,.00573861728961726974,.00366377695063813105,.00157667302615291931 };
const double NIntegrate_GL64_S[64] = { .00034747913211393027,.00182994161402236032,.00449331426162783963,.00833187305768702153,.01333658610504451812,.01949560017397314054,.02679431257079859196,.03521541393403021208,.04473893146074859712,.05534227700244294707,.06700030092295359011,.07968535187370981862,.09336734243860122012,.10801382052832929619,.12359004636973405169,.14005907491419458657,.15738184347288337871,.17551726437267133007,.19442232241380337487,.21405217689868298285,.23436026799005272717,.25529842714647352126,.27681699137326795600,.29886492101800419815,.32138992083116594202,.34433856400489452192,.36765641889561629181,.39128817812999645792,.41517778978800359098,.43926859035193972276,.46350343910610048027,.48782485366828778374,.51217514633171221625,.53649656089389951972,.56073140964806027723,.58482221021199640901,.60871182187000354207,.63234358110438370818,.65566143599510547807,.67861007916883405797,.70113507898199580184,.72318300862673204399,.74470157285352647873,.76563973200994727282,.78594782310131701714,.80557767758619662512,.82448273562732866992,.84261815652711662128,.85994092508580541342,.87640995363026594830,.89198617947167070380,.90663265756139877987,.92031464812629018137,.93299969907704640988,.94465772299755705292,.95526106853925140287,.96478458606596978791,.97320568742920140803,.98050439982602685945,.98666341389495548187,.99166812694231297846,.99550668573837216036,.99817005838597763967,.99965252086788606972 }, NIntegrate_GL64_W[64] = { .00089164036084821647,.00207351663028123381,.00325222898448918142,.00442337991318197386,.00558406973006556440,.00673152394835932129,.00786301523801235966,.00897585788784867154,.01006741157676510468,.01113508690419162707,.01217635128435543666,.01318873485752732933,.01416983630712974161,.01511732853620123943,.01602896417742577679,.01690258091857080469,.01773610662844119190,.01852756427012002302,.01927507658930781456,.01997687056636017069,.02063128162131176430,.02123675756182679450,.02179186226466172668,.02229527908187828153,.02274581396370907223,.02314239829065720864,.02348409140810500866,.02377008285741515433,.02399969429822915386,.02417238111740147858,.02428773372075171346,.02434547850456986019,.02434547850456986019,.02428773372075171346,.02417238111740147858,.02399969429822915386,.02377008285741515433,.02348409140810500866,.02314239829065720864,.02274581396370907223,.02229527908187828153,.02179186226466172668,.02123675756182679450,.02063128162131176430,.01997687056636017069,.01927507658930781456,.01852756427012002302,.01773610662844119190,.01690258091857080469,.01602896417742577679,.01511732853620123943,.01416983630712974161,.01318873485752732933,.01217635128435543666,.01113508690419162707,.01006741157676510468,.00897585788784867154,.00786301523801235966,.00673152394835932129,.00558406973006556440,.00442337991318197386,.00325222898448918142,.00207351663028123381,.00089164036084821647 };
const double NIntegrate_GL80_S[80] = { .00022308867418468505,.00117506780088115555,.00288622951715586105,.00535434875012223448,.00857571363068546479,.01254542970713610330,.01725745547810037427,.02270461682818254725,.02887861934506366262,.03577006141377710202,.04336844871412117291,.05166221028061465840,.06063871616089308564,.07028429666844445151,.08058426320987236219,.09152293065926826481,.10308364124769727502,.11524878993247931306,.12799985120820136384,.14131740731895005987,.15518117782898619961,.16957005050694009913,.18446211347656401687,.19983468858512412842,.21566436593864510763,.23192703955143403399,.24859794405560750620,.26565169241472776148,.28306231458412195346,.30080329705901538648,.31884762325025634219,.33716781462614904269,.35573597255774407344,.37452382080386393975,.39350274857116693371,.41264385408367659372,.43191798859542805672,.45129580077920770046,.47074778142378966568,.49024430837160300117,.50975569162839699882,.52925221857621033431,.54870419922079229953,.56808201140457194327,.58735614591632340627,.60649725142883306628,.62547617919613606024,.64426402744225592655,.66283218537385095730,.68115237674974365780,.69919670294098461351,.71693768541587804653,.73434830758527223851,.75140205594439249379,.76807296044856596600,.78433563406135489236,.80016531141487587157,.81553788652343598312,.83042994949305990086,.84481882217101380038,.85868259268104994012,.87200014879179863615,.88475121006752068693,.89691635875230272497,.90847706934073173518,.91941573679012763780,.92971570333155554848,.93936128383910691435,.94833778971938534159,.95663155128587882708,.96422993858622289797,.97112138065493633737,.97729538317181745274,.98274254452189962572,.98745457029286389669,.99142428636931453520,.99464565124987776551,.99711377048284413894,.99882493219911884444,.99977691132581531494 }, NIntegrate_GL80_W[80] = { .00057247500159347076,.00133176679475634083,.00209015656234744761,.00284546122570159932,.00359645238405865637,.00434197263463042921,.00508088302055153226,.00581205706039891345,.00653438079620066964,.00724675402025453805,.00794809179186284402,.00863732602813465317,.00931340710414951571,.00997530543907099946,.01062201305789100319,.01125254512316623096,.01186594143296505064,.01246126788205774555,.01303761788378255895,.01359411375024319033,.01412990802863843119,.01464418479163392384,.01513616087977899033,.01560508709405735082,.01605024933674388657,.01647096969882270069,.01686660749230576140,.01723656022587696439,.01758026452237379674,.01789719697670802730,.01818687495291798902,.01844885731913800441,.01868274511936524501,.01888818218100069874,.01906485565723881917,.01921249650347971159,.01933087988703823166,.01941982552952598446,.01947919798138476559,.01950890682815332740,.01950890682815332740,.01947919798138476559,.01941982552952598446,.01933087988703823166,.01921249650347971159,.01906485565723881917,.01888818218100069874,.01868274511936524501,.01844885731913800441,.01818687495291798902,.01789719697670802730,.01758026452237379674,.01723656022587696439,.01686660749230576140,.01647096969882270069,.01605024933674388657,.01560508709405735082,.01513616087977899033,.01464418479163392384,.01412990802863843119,.01359411375024319033,.01303761788378255895,.01246126788205774555,.01186594143296505064,.01125254512316623096,.01062201305789100319,.00997530543907099946,.00931340710414951571,.00863732602813465317,.00794809179186284402,.00724675402025453805,.00653438079620066964,.00581205706039891345,.00508088302055153226,.00434197263463042921,.00359645238405865637,.00284546122570159932,.00209015656234744761,.00133176679475634083,.00057247500159347076 };
const double NIntegrate_GL96_S[96] = { .00015524805838461658,.00081781206840916113,.00200907850639535467,.00372804983811868771,.00597293683518810025,.00874136821849266127,.01203041270743176677,.01583658576836789391,.02015585427562873034,.02498364110778118212,.03031483012362239153,.03614377163884565451,.04246428843955096289,.04926968234207382934,.05655274129878979197,.06430574704535174856,.07252048328269927226,.08118824438590643925,.09029984463103416223,.09984562793042959138,.10981547806628339119,.12019882941167625064,.13098467812779993357,.14216159382551618688,.15371773167891421932,.16564084497804192302,.17791829810751644660,.19053707993726571480,.20348381761121395965,.21674479071930141579,.23030594583782128188,.24415291142266616320,.25827101303970182011,.27264528891612849568,.28726050579634972731,.30210117508554569835,.31715156926384318248,.33239573855368728869,.34781752782275182348,.36340059370447542925,.37912842191807999383,.39498434476971639819,.41095155881619069862,.42701314267255152900,.44315207494466703954,.45935125226778722050,.47559350743197513444,.49186162757519851521,.50813837242480148478,.52440649256802486555,.54064874773221277949,.55684792505533296045,.57298685732744847099,.58904844118380930137,.60501565523028360180,.62087157808192000616,.63659940629552457074,.65218247217724817651,.66760426144631271130,.68284843073615681751,.69789882491445430164,.71273949420365027268,.72735471108387150431,.74172898696029817988,.75584708857733383679,.76969405416217871811,.78325520928069858420,.79651618238878604034,.80946292006273428519,.82208170189248355339,.83435915502195807697,.84628226832108578067,.85783840617448381311,.86901532187220006642,.87980117058832374935,.89018452193371660880,.90015437206957040861,.90970015536896583776,.91881175561409356074,.92747951671730072773,.93569425295464825143,.94344725870121020802,.95073031765792617065,.95753571156044903710,.96385622836115434548,.96968516987637760846,.97501635889221881787,.97984414572437126965,.98416341423163210608,.98796958729256823322,.99125863178150733872,.99402706316481189974,.99627195016188131228,.99799092149360464532,.99918218793159083886,.99984475194161538341 }, NIntegrate_GL96_W[96] = { .00039839603277600621,.00092698039447346086,.00145536590896747320,.00198227716922234333,.00250710137146375884,.00302927275211798084,.00354823539557693263,.00406343846284937960,.00457433561539169331,.00508038526750420787,.00558105104991924929,.00607580233554415981,.00656411478348078631,.00704547088615743045,.00751936051349746900,.00798528145128114569,.00844273993212258622,.00889125115802263041,.00933033981370573369,.00975954057007251120,.01017839857716666229,.01058646994609564949,.01098332221937217459,.01136853482916468700,.01174169954296310992,.01210242089618234564,.01245031661124180514,.01278501800267468074,.01310617036783620695,.01341343336279588109,.01370648136301462141,.01398500380842416721,.01424870553254269282,.01449730707527761827,.01473054497908395298,.01494817206816419299,.01514995771041379689,.01533568806183457450,.01550516629315691871,.01565821279843067790,.01579466538536358427,.01591437944720550326,.01601722811599633160,.01610310239701512533,.01617191128428796421,.01622358185703213468,.01625805935693441799,.01627530724618158312,.01627530724618158312,.01625805935693441799,.01622358185703213468,.01617191128428796421,.01610310239701512533,.01601722811599633160,.01591437944720550326,.01579466538536358427,.01565821279843067790,.01550516629315691871,.01533568806183457450,.01514995771041379689,.01494817206816419299,.01473054497908395298,.01449730707527761827,.01424870553254269282,.01398500380842416721,.01370648136301462141,.01341343336279588109,.01310617036783620695,.01278501800267468074,.01245031661124180514,.01210242089618234564,.01174169954296310992,.01136853482916468700,.01098332221937217459,.01058646994609564949,.01017839857716666229,.00975954057007251120,.00933033981370573369,.00889125115802263041,.00844273993212258622,.00798528145128114569,.00751936051349746900,.00704547088615743045,.00656411478348078631,.00607580233554415981,.00558105104991924929,.00508038526750420787,.00457433561539169331,.00406343846284937960,.00354823539557693263,.00302927275211798084,.00250710137146375884,.00198227716922234333,.00145536590896747320,.00092698039447346086,.00039839603277600621 };

// use macro to generate functions
#define Generate_NIntegrate_GL(N) \
template<typename T, typename Fun>\
T NIntegrate_GL##N(Fun F, double a, double b) { \
	double ab = b - a; \
	T s(0.); \
	for (int i = 0; i < N; i++) { \
		double x = a + NIntegrate_GL##N##_S[i] * ab; \
		s += F(x) * NIntegrate_GL##N##_W[i]; \
	} \
	return s * ab; \
}
Generate_NIntegrate_GL(4) Generate_NIntegrate_GL(6) Generate_NIntegrate_GL(8) Generate_NIntegrate_GL(10)
Generate_NIntegrate_GL(12) Generate_NIntegrate_GL(14) Generate_NIntegrate_GL(16) Generate_NIntegrate_GL(18) Generate_NIntegrate_GL(20)
Generate_NIntegrate_GL(24) Generate_NIntegrate_GL(28) Generate_NIntegrate_GL(32) Generate_NIntegrate_GL(36) Generate_NIntegrate_GL(40)
Generate_NIntegrate_GL(48) Generate_NIntegrate_GL(64) Generate_NIntegrate_GL(80) Generate_NIntegrate_GL(96) 
#undef Generate_NIntegrate_GL

// To-do: Gauss-Kronrod






// Adaptive Simpson method, expected to work for continuous scalar-valued functions
template<typename Fun>
double _NIntegrate_Simpson_adaptive_recurse(const Fun &f, double a, double b, double c, double fa, double fb, double fc, double eps, double s) {
	double ac = (a + c)*.5, fac = f(ac);
	double cb = (b + c)*.5, fcb = f(cb);
	double S1 = (fa + fc + 4.*fac)*(c - a)*(1. / 6.);
	double S2 = (fc + fb + 4.*fcb)*(b - c)*(1. / 6.);
	double SS = S1 + S2;
	if (abs(SS - s) <= 15. * eps || b - a < 1e-12)  // may be inaccurate due to coincidence
		return SS + (SS - s) * (1. / 15.);
	return _NIntegrate_Simpson_adaptive_recurse(f, a, c, ac, fa, fc, fac, .5*eps, S1)
		+ _NIntegrate_Simpson_adaptive_recurse(f, c, b, cb, fc, fb, fcb, .5*eps, S2);
}
template<typename Fun>
double NIntegrate_Simpson_adaptive(const Fun &f, double a, double b, double epsilon) {
	double c = (a + b) *.5;
	double fa = f(a), fb = f(b), fc = f(c);
	return _NIntegrate_Simpson_adaptive_recurse(f, a, b, c, fa, fb, fc, epsilon,
		(fa + fb + 4.*fc)*(b - a)*(1. / 6.));
}






#endif // __INC_INTEGRATION_H
