float bunnySDF(in vec3 p) {
    if (dot(p, p) > 1.1)  return length(p) - 1.0;
vec4 f00=sin(p.x*vec4(1.161,.662,2.111,.398)+p.y*vec4(.803,-.427,.746,-.326)+p.z*vec4(.882,.157,1.822,-.308)+vec4(-.551,-.203,.354,.12));
vec4 f01=sin(p.x*vec4(.24,-.362,.366,.483)+p.y*vec4(2.271,.12,2.465,.327)+p.z*vec4(.611,-.949,-1.485,-.562)+vec4(.526,.125,.437,.334));
vec4 f02=sin(p.x*vec4(-1.839,-.418,-1.682,.801)+p.y*vec4(.042,.33,.985,1.13)+p.z*vec4(.533,.603,-1.228,.199)+vec4(-.552,.084,-.263,-.386));
vec4 f03=sin(p.x*vec4(-.53,-.127,-1.509,1.129)+p.y*vec4(.253,.618,.8,-.341)+p.z*vec4(-.868,-.913,.53,-1.253)+vec4(-.373,.073,-.247,-.954));
vec4 f10=sin(mat4(.656,-.741,-.471,.309,-.329,-.151,.271,.529,1.052,-.575,-.702,.48,-.052,.284,.217,-.156)*f00
    +mat4(.195,-1.015,-.887,-.262,.237,.051,-.062,.176,.048,-.628,-.955,-.157,.147,-.605,.31,.196)*f01
    +mat4(-.408,.019,.267,-.786,-.09,-.319,.295,-.36,-.521,.119,-.068,-.607,.001,-.013,-.391,.558)*f02
    +mat4(-.035,.353,-.438,-.095,-.554,-.441,-.496,-.432,-.564,-.001,.02,-.423,-.065,.321,.058,.817)*f03
    +vec4(.193,-.169,.041,-.417));
vec4 f11=sin(mat4(.51,-.239,-.309,-.209,.481,-.463,-.349,.431,.094,.224,-.433,-.042,-.24,-.306,.066,.011)*f00
    +mat4(.412,.65,-.874,-.162,-.632,-.287,.161,-.296,.163,-1.026,-.557,.503,-.373,-.453,.208,-.119)*f01
    +mat4(.388,.928,-.171,.051,.039,.78,-.188,.032,-.702,-1.163,-.176,-.304,.183,-.504,-.031,-.276)*f02
    +mat4(.171,-.428,.311,-.569,.099,-.105,-.242,-.274,-.353,.865,.261,-.615,.297,-.836,.081,-.026)*f03
    +vec4(-.473,-.089,.356,-.179));
vec4 f12=sin(mat4(-.497,.433,-.339,-.729,-.089,.224,.213,.373,.681,-.199,-.581,-.315,.536,.465,-.087,.626)*f00
    +mat4(-.275,-.008,.518,-.483,-.188,.015,.704,.372,.452,-.535,.582,-.673,.332,-.216,-.198,.401)*f01
    +mat4(-.505,.436,-.248,.472,-.147,-.206,-.608,-.608,.175,-.198,-.316,.39,.433,.2,-.337,.04)*f02
    +mat4(-.058,.108,.206,-.341,.152,-.015,.577,-.248,-.395,-.298,-.201,-.405,.126,.609,-.301,-.232)*f03
    +vec4(-.037,-.07,-.064,.096));
vec4 f13=sin(mat4(.167,.088,-.31,.283,-.169,.46,.267,-.156,.154,-.04,-.255,.122,-.067,.254,-.114,-.37)*f00
    +mat4(-.463,-.234,.196,-.618,.113,-.069,-.311,-.309,.213,.341,.144,-.857,-.108,-.487,-.429,-.554)*f01
    +mat4(.034,-.008,.1,-.14,.194,-.09,.114,-.251,-.253,.39,-.039,-.18,.111,.218,.057,-.015)*f02
    +mat4(.068,-.096,-.218,.137,.112,-.086,-.604,-.371,-.087,-.387,.226,-.953,.555,-.417,-.031,-.456)*f03
    +vec4(.217,-.153,.06,-.262));
vec4 f20=sin(mat4(-.137,-.135,.182,.221,.12,-.206,.663,.125,-.261,.091,-.209,.197,.017,-.083,-.063,.17)*f10
    +mat4(.084,.133,-.751,.476,.346,-.501,.749,-.485,-.673,-.456,-.027,-.434,-.112,.101,0,-.291)*f11
    +mat4(.257,-.372,-.081,.27,-.632,-.431,.14,-.306,-.325,-.494,.075,.202,-.401,-.53,-.329,.071)*f12
    +mat4(-.309,-.065,-.465,-.486,-.175,.43,.282,.106,-.529,.099,.379,.655,.282,.053,.227,-.176)*f13
    +vec4(-.146,.076,-.142,-.223));
vec4 f21=sin(mat4(-.06,-.01,.293,-.017,-.4,-.273,.064,.006,.639,.361,.838,-.661,-.014,-.586,.085,.54)*f10
    +mat4(.465,.346,.337,.344,-.539,.446,-.252,.432,-.271,-.059,-.489,-.064,.759,-.189,-.215,-.343)*f11
    +mat4(-.373,.213,-.649,.536,-.154,-.15,.019,.034,-.304,.178,-.405,-.519,.052,.22,-.218,-.558)*f12
    +mat4(.51,-.53,.35,.35,-.235,-.167,-.098,-.37,-.155,.162,.188,.019,-.108,-.076,-.216,.036)*f13
    +vec4(-.215,-.281,.038,.059));
vec4 f22=sin(mat4(.202,-.175,-.075,.297,.118,-.089,-.158,.38,.345,.21,-.395,-.28,-.257,-.671,.506,.287)*f10
    +mat4(.251,-.505,.329,-.352,-.349,.81,-.531,.813,.105,.286,.072,-.15,.496,-.788,-.119,.037)*f11
    +mat4(-.655,.055,.185,.184,.328,-.41,-.058,.492,.123,.835,-.769,.277,-.161,.03,-.643,.739)*f12
    +mat4(-.365,.11,-.367,.067,-.211,-1.172,.337,.232,.061,-.475,.151,-.19,.735,.168,.173,-.148)*f13
    +vec4(.35,.763,-.03,.286));
vec4 f23=sin(mat4(.054,-.328,-.259,-.31,.086,.013,.153,.237,-.397,-.03,-.366,-.404,.227,.114,.164,.046)*f10
    +mat4(-.299,-.374,.268,.429,.058,.813,-.677,-.215,-.008,-.602,.241,.425,-.305,.259,.331,-.084)*f11
    +mat4(.031,.204,-.01,.183,-.009,.175,-.036,.514,.243,-.451,.074,.368,-.152,.342,.268,-.136)*f12
    +mat4(.282,.076,-.112,-.138,.544,.285,-.222,.193,-.163,-.479,-.376,.04,-.567,-.584,.01,-.457)*f13
    +vec4(-.482,-.031,.014,-.001));
return dot(vec4(-.405,.831,-.467,-.527),f20)+dot(vec4(-.503,-.459,.328,.316),f21)+dot(vec4(-.444,-.217,-.294,.498),f22)+dot(vec4(-.664,-.547,-.835,.622),f23)+.203;
}

vec3 bunnyNormal(vec3 p) {
    mat3 k = mat3(p,p,p) - mat3(0.001);
    return normalize(bunnySDF(p) - vec3(bunnySDF(k[0]),bunnySDF(k[1]),bunnySDF(k[2])));
}


void mainImage(out vec4 fragColor, in vec2 fragCoord) {

    float rx = iMouse.z>0.?3.14*(iMouse.y/iResolution.y)-1.57:0.3;
    float rz = iMouse.z>0.?-iMouse.x/iResolution.x*4.0*3.14:0.5*iTime-2.0;

    vec3 w = vec3(cos(rx)*vec2(cos(rz),sin(rz)), sin(rx));
    vec3 u = vec3(-sin(rz),cos(rz),0);
    vec3 v = cross(w,u);

    vec3 ro = 5.0*w;
    vec2 uv = 2.0*fragCoord.xy/iResolution.xy - vec2(1.0);
    vec3 rd = mat3(u,v,-w)*vec3(uv*iResolution.xy, 2.0*length(iResolution.xy));
    rd = normalize(rd);

    float t0 = 0.01;
    float t1 = 2.0*length(ro);
    float t = t0;
    for (int i=min(int(iTime),0); i<100; i++) {
        float dt = bunnySDF(ro+rd*t);
        t += dt;
        if (abs(dt) < 1e-2) {
            vec3 n = bunnyNormal(ro+rd*t);
            float col = 0.2+0.1*n.y+0.7*max(dot(n, normalize(vec3(0.5,0.5,1.0))), 0.0);
            fragColor = vec4(vec3(col), 1.0);
            return;
        }
        if (t > t1) break;
    }
    fragColor = vec4(vec3(0.0), 1.0);
}
